#summary explains how the data are stored and accessed

= Introduction =

This page explains the way the data are stored and retrieved.

The general idea is that there is a class which holds all the Tracking information in one place. This class is called *DataStorage*. The tracking data themselves are stored in special classes that express their type (DataWay is a way!). These Data can be serialised (written on the devices background memory) using a ContentProvider.

= Details =

== Datastructure ==
We have following Datastructure:

 * A *Track* consists of Media, Ways, Areas, Nodes (POIs)
 * A *Way* cosists of Media, Nodes, Metadata
 * An *Area* cosists of Media, Nodes, Metadata
 * A *Node* consists of Media, Metadata
 * *Media* refer to a media written on the devices memory (path)

At the top level we have possibly several Tracks.

== Operations ==

There are 3 basic operations:

 * A Track, Way, Area, Node, Medium can be *deleted*
 * A Track, Way, Area, Node, Medium can be *added*
 * The Metadata of Ways, Areas, Nodes and maybe Media can be *changed*

Deleting a Node of a Way implies that the Node itself is deleted, too.
Also a Medium is assigned to exactly one datum. If the Medium is deassigned from an object the Medium on the background memory is deleted as well.

*How to* do execute the operations:
 * If we want to *delete* an object _A_ which is contained in _B_ (e.g. a Node _a_ of a Way _b_) we call the delete // TO BE CONTINUED

// TRASH
Having an trackobject-object (lets call it A) has a method delete() which deletes it from the background memory.  The object B which contains A has a method which deletes A, since A is still in the working memory. Now A is completely deleted if both operations are executed.
 * 